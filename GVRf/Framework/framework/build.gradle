import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.library'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 19

        ndk {
            moduleName "gvrf"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

    sourceSets.main {
        java.srcDirs = ['src/main/java']
        jni.srcDirs = [] // no auto generation of Android.mk
        jniLibs.srcDir 'src/main/libs' // pre-compiled libraries
    }

    task buildNative(type: Exec) {
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            commandLine 'ndk-build.cmd', '-C', file('src/main').absolutePath, '-j', 16//, 'NDK_DEBUG=1'
        } else {
            commandLine 'ndk-build', '-C', file('src/main').absolutePath, '-j', 16//, 'NDK_DEBUG=1'
        }
    }

    task cleanNative(type: Exec) {
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            commandLine 'ndk-build.cmd', '-C', file('src/main').absolutePath, '-j', 16, 'clean'
        } else {
            commandLine 'ndk-build', '-C', file('src/main').absolutePath, '-j', 16, 'clean'
        }
    }

    clean.dependsOn 'cleanNative'

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile fileTree(dir: 'src/main/libs', include: ['*.jar'])
}
